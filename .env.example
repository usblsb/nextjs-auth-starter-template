# To access your Clerk keys, first create a clerk.com account then open dashboard.clerk.com. Create a new Clerk application and copy the Keys from step 2 in the Next.js quickstart tab.
NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY="pk_test_"
CLERK_SECRET_KEY="sk_test_"

# Webhook Secret from Clerk Dashboard - Required for webhook signature validation
CLERK_WEBHOOK_SECRET="whsec_"
# The route at which your authentication flow lives, for more information see: https://clerk.com/docs/deployments/clerk-environment-variables
NEXT_PUBLIC_CLERK_SIGN_IN_URL=/sign-in
NEXT_PUBLIC_CLERK_SIGN_UP_URL=/sign-up
NEXT_PUBLIC_CLERK_SIGN_OUT_URL=/sign-out

# Redirect URLs for after authenticating, for more information see: https://clerk.com/docs/guides/custom-redirects

# Force redirect URLs - Always redirect to these URLs after authentication (overrides redirect_url)
NEXT_PUBLIC_CLERK_SIGN_IN_FORCE_REDIRECT_URL=/web-dashboard
NEXT_PUBLIC_CLERK_SIGN_UP_FORCE_REDIRECT_URL=/web-dashboard

# Fallback redirect URLs - Used when no redirect_url is present (e.g., direct navigation to auth pages)
NEXT_PUBLIC_CLERK_SIGN_OUT_FALLBACK_REDIRECT_URL=/
NEXT_PUBLIC_CLERK_SIGN_UP_FALLBACK_REDIRECT_URL=/

# DATOS DE CONEXION POSTGRESQL - NEON.COM Frankfurt [DB1]
# Project ID : flat-cloud-09473494
# Project name: clerk-nextjs-auth-starter-template
# PostgreSQL 17
DB_HOST="h"
DB_PORT=""
DB_NAME=""
DB_USER=""
DB_PASSWORD=""
# DATABASE_URL para Neon.com PostgreSQL con SSL en Frankfurt
DATABASE_URL=""

STRIPE_API_KEY="sk_test_"

# Neon API Key - Get from https://console.neon.tech/app/settings/api-keys
NEON_API_KEY="napi_"